Spinner
This is a simple spinner class to help with implemetning spinning wheels in games.

Spinner
spinner(string[]o)
Parameters:
o: An array string specifying what items should be inserted into the spinner by default. For example, you could do string[]my_list={"item1","item2","item3"}; and then follow up with something like. spinner my_spinner(my_list).
Other parameters, these are optional, since they are already assigned default values in the constructor.
startspeed: This is the main speed of your wheel, in milliseconds. Default is 75.
endspeed: This is the speed the wheel will gradually end up slowing down to. Once the speed is reached, the spinning will stop and the result will appear. Default is 500.
stoptime: The length of time your wheel will continue to spin before it is time to slow down. Default is 7500 (7.5 seconds).
slowtime: The amount of milliseconds added to your wheel's gradual decrease in speed. Default is 50.
spinsound: The sound that should play when your wheel is in action.
direction: A string specifying which direction your spinner should spin. "clockwise" goes down to the left, then up to the right, like a clock. "counter-clockwise" goes down to the right, then comes back up to the left, the reverse of a clock.

Functions:

Add to wheel
void add_to_wheel(string item)
Parameters:
item: The item that should be added to the wheel.
Remarks:
You can add several of the same item to a wheel, but be sure that when you remove the item, you know the position of the item. Please see the remove from wheel function remarks.
Example:
string[]my_items={"milkshake","fries","chicken_nuggets"};
spinner s(my_items);
//I want two burgers.
s.add_to_wheel("burger");
s.add_to_wheel("burger");

Remove from wheel
void remove_from_wheel(string item,int position=-1)
Parameters:
item: The item to be removed.
position: An int variable specifying the position of the item you want to remove. This is set to -1 by default.
Remarks:
When you are removing an item that is duplicated several times on a wheel, you must use the position to find the exact one you want to remove. Otherwise just use the item string without modifying the position variable.
In the below example, we add two items, but remove a specific item, even though it is duplicated.
string[]my_items={"milkshake","fries","chicken_nuggets"};
spinner s(my_items);
//I want two burgers.
s.add_to_wheel("burger");
s.add_to_wheel("burger");
//Iw. Why does my first burger have ketchup? Damn it, Mc'Donalds!
//IN this case, we already have a milkshake, fries, chicken nuggets, and two burgers. This makes 5 elements, but we want to remove our first burger. Therefore, we use 4 as our position.
s.remove_from_wheel("burger",4);

Spin
string spin()
Parameters:
None
Return value:
A string containing the ending result on success, or an empty string on failure.
Remarks:
The only time that the spinner could actually end up failing is if you only have less than or equal to 2 options on your wheel. In this case you must increase the options on your wheel, or manually modify this class to suit your needs.
Example:
See test.bgt.
